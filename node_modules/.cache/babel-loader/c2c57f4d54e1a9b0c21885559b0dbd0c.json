{"ast":null,"code":"var _jsxFileName = \"/home/kamil/projects/portfolio/phonebook/phonebook-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './phonenumbers.css';\nimport './App.css';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const persons = useRef([]);\n  const [personsToDisplay, setPersonsToDisplay] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const [editingNumber, setEditingNumber] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/persons').then(response => {\n      setPersonsToDisplay(response.data);\n    });\n  }, []); //grabs up to date info from database\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/persons').then(response => {\n      persons.current = response.data;\n    });\n  });\n\n  const addName = event => {\n    event.preventDefault();\n    console.log(newNumber);\n    const nameObject = {\n      id: String(Date.now()),\n      name: newName,\n      number: newNumber,\n      inEdit: false\n    };\n    console.log(nameObject);\n\n    if (newName.length === 0 || newNumber.length === 0) {\n      window.alert('You must enter a Name and Number');\n      return;\n    } //Debating wether to allow duplicate names\n    // for (let person of persons.current) {\n    //   console.log(person);\n    //   if (person.name === newName) {\n    //     window.alert('Duplicate names are not allowed!')\n    //     return\n    //   }\n    // }\n    //Adding new name to phonebook\n\n\n    axios.post('http://localhost:3001/api/persons', nameObject).then(response => {\n      console.log(response);\n      setPersonsToDisplay(persons.current.concat(nameObject));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const editName = personToEdit => {\n    if (editingId !== null) {\n      personsToDisplay.find(person => person.id === editingId).inEdit = false;\n      setEditingId(personToEdit.id);\n    }\n\n    personToEdit.inEdit = true;\n    setEditingId(personToEdit.id);\n    setEditingNumber(personToEdit.number);\n  };\n\n  const finishEdit = personToEdit => {\n    personToEdit.inEdit = false;\n    const updatedPerson = {\n      id: personToEdit.id,\n      name: personToEdit.name,\n      number: editingNumber\n    };\n    axios.put(`http://localhost:3001/api/persons/${personToEdit.id}`, updatedPerson).then(response => {\n      const newPersonList = persons.current.map(person => person.id === updatedPerson.id ? updatedPerson : person);\n      setPersonsToDisplay(newPersonList);\n    }).catch(error => {\n      console.log(error);\n    });\n    setEditingId(null); //forces the textbox to update\n  };\n\n  const deleteName = personToDelete => {\n    if (window.confirm(`Are you sure you want to delete ${personToDelete.name}`)) {\n      console.log(personToDelete);\n      axios.delete(`http://localhost:3001/api/persons/${personToDelete.id}`).then(response => {\n        const newPersonList = persons.current.filter(person => person.id !== personToDelete.id);\n        setPersonsToDisplay(newPersonList);\n      }).catch(error => {\n        console.log('error in deletion');\n      });\n    }\n  };\n\n  const handleNewName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleEdit = event => {\n    setEditingNumber(event.target.value);\n  };\n\n  const handleNewSearch = event => {\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') {\n      setPersonsToDisplay(persons.current);\n      return;\n    }\n\n    const filteredPersons = persons.current.filter(person => person.name.toLowerCase().includes(searchName));\n    setPersonsToDisplay(filteredPersons);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Online Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      newName: newName,\n      newNumber: newNumber,\n      handleNewName: handleNewName,\n      handleNewNumber: setNewNumber,\n      addName: addName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleNewSearch: handleNewSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: personsToDisplay,\n      deleteName: deleteName,\n      editName: editName,\n      finishEdit: finishEdit,\n      handleEdit: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iN3fI+59nrJNz87eF+gTc34JDcY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kamil/projects/portfolio/phonebook/phonebook-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","axios","Filter","Persons","PersonForm","App","persons","personsToDisplay","setPersonsToDisplay","newName","setNewName","newNumber","setNewNumber","editingId","setEditingId","editingNumber","setEditingNumber","get","then","response","data","current","addName","event","preventDefault","console","log","nameObject","id","String","Date","now","name","number","inEdit","length","window","alert","post","concat","catch","error","editName","personToEdit","find","person","finishEdit","updatedPerson","put","newPersonList","map","deleteName","personToDelete","confirm","delete","filter","handleNewName","target","value","handleNewNumber","handleEdit","handleNewSearch","searchName","toLowerCase","filteredPersons","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './phonenumbers.css'\nimport './App.css';\nimport axios from 'axios'\n\nimport Filter from './components/Filter';\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm';\n\nfunction App() {\n\n  const persons = useRef([])\n  const [ personsToDisplay, setPersonsToDisplay ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ editingId, setEditingId ] = useState(null)\n  const [ editingNumber, setEditingNumber ] = useState(null)\n\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        setPersonsToDisplay(response.data)\n      })\n  }, [])\n\n  //grabs up to date info from database\n  useEffect(() => {\n      axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        persons.current = response.data\n      })\n  })\n\n  const addName = (event) => {\n    event.preventDefault()\n    console.log(newNumber);\n    const nameObject = \n      { id: String(Date.now()),\n        name: newName,\n        number: newNumber,\n        inEdit: false }\n\n    console.log(nameObject);\n    if (newName.length === 0 || newNumber.length === 0) {\n      window.alert('You must enter a Name and Number')\n      return\n    }\n    //Debating wether to allow duplicate names\n    // for (let person of persons.current) {\n    //   console.log(person);\n    //   if (person.name === newName) {\n    //     window.alert('Duplicate names are not allowed!')\n    //     return\n    //   }\n    // }\n    //Adding new name to phonebook\n    axios.post('http://localhost:3001/api/persons', nameObject)\n    .then(response => {\n      console.log(response)\n      setPersonsToDisplay(persons.current.concat(nameObject))\n\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n\n  const editName = (personToEdit) => {\n    if (editingId !== null) {\n      personsToDisplay.find(person => person.id === editingId).inEdit = false\n      setEditingId(personToEdit.id)\n    }\n    personToEdit.inEdit = true\n    setEditingId(personToEdit.id)\n    setEditingNumber(personToEdit.number)\n  }\n\n  const finishEdit = (personToEdit) => {\n    personToEdit.inEdit = false\n    const updatedPerson = {\n      id: personToEdit.id,\n      name: personToEdit.name,\n      number: editingNumber\n    }\n    axios\n      .put(`http://localhost:3001/api/persons/${personToEdit.id}`, updatedPerson)\n      .then(response => {\n        const newPersonList = persons.current.map(person => person.id === updatedPerson.id ? updatedPerson : person)\n        setPersonsToDisplay(newPersonList)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    setEditingId(null) //forces the textbox to update\n  }\n\n\n  const deleteName = (personToDelete) => {\n    if (window.confirm(`Are you sure you want to delete ${personToDelete.name}`)) {\n      console.log(personToDelete);\n      axios.delete(`http://localhost:3001/api/persons/${personToDelete.id}`)\n        .then(response => {\n          const newPersonList = persons.current.filter(person => person.id !== personToDelete.id)\n          setPersonsToDisplay(newPersonList)\n        })\n        .catch(error => {\n          console.log('error in deletion');\n        })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleEdit = (event) => {\n    setEditingNumber(event.target.value)\n  }\n\n  const handleNewSearch = (event) => {\n    const searchName = event.target.value.toLowerCase();\n\n    if (searchName === '') { \n      setPersonsToDisplay(persons.current)\n      return;\n    }\n    const filteredPersons = persons.current.filter(person => person.name.toLowerCase().includes(searchName))\n    setPersonsToDisplay(filteredPersons)\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Online Phonebook</h2>\n\n      <PersonForm newName={newName} newNumber={newNumber}\n                  handleNewName={handleNewName} handleNewNumber={setNewNumber}\n                  addName={addName} />\n\n      <Filter handleNewSearch={handleNewSearch} />\n\n      <Persons persons={personsToDisplay} \n               deleteName={deleteName} editName={editName} \n               finishEdit={finishEdit} handleEdit={handleEdit}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}